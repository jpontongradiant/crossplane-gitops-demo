apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: helmapp-composition-v2
  labels:
    crossplane.io/xrd: xhelmapps.platform.example.com
spec:
  compositeTypeRef:
    apiVersion: platform.example.com/v1alpha1
    kind: XHelmApp
  mode: Pipeline  # OBLIGATORIO en v2 - se elimin√≥ modo Resources
  pipeline:
  - step: create-helm-release
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-release
            namespace: {{ .observed.composite.resource.metadata.namespace }}
          spec:
            providerConfigRef:
              name: helm-provider
            forProvider:
              chart:
                name: {{ .observed.composite.resource.spec.parameters.chart }}
                repository: {{ .observed.composite.resource.spec.parameters.repository }}
                version: {{ .observed.composite.resource.spec.parameters.version }}
              namespace: {{ .observed.composite.resource.spec.parameters.namespace }}
              values:
                {{ if .observed.composite.resource.spec.parameters.values }}
                {{ range $key, $value := .observed.composite.resource.spec.parameters.values }}
                {{ $key }}: {{ $value }}
                {{ end }}
                {{ else }}
                replicaCount: 2
                image:
                  tag: "1.25.0"
                service:
                  type: ClusterIP
                  port: 80
                resources:
                  limits:
                    memory: "128Mi"
                    cpu: "100m"
                  requests:
                    memory: "64Mi"
                    cpu: "50m"
                {{ end }}
