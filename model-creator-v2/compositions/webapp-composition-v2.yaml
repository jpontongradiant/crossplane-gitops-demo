apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: webapp-composition-v2
  labels:
    crossplane.io/xrd: xwebapps.platform.example.com
spec:
  compositeTypeRef:
    apiVersion: platform.example.com/v1alpha1
    kind: XWebApp
  mode: Pipeline  # MANDATORY in v2 - Resources mode removed
  pipeline:
  - step: create-namespace
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          apiVersion: kubernetes.m.crossplane.io/v1alpha1  # NEW: .m. domain for namespaced resources
          kind: Object
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-namespace
            namespace: {{ .observed.composite.resource.metadata.namespace }}  # NEW: Inherits namespace from XR
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Namespace
                metadata:
                  name: {{ .observed.composite.resource.spec.parameters.namespace }}
                  labels:
                    crossplane.io/managed-by: {{ .observed.composite.resource.metadata.name }}

  - step: create-configmap
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          apiVersion: kubernetes.m.crossplane.io/v1alpha1
          kind: Object
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-config
            namespace: {{ .observed.composite.resource.metadata.namespace }}
          spec:
            providerConfigRef:
              name: kubernetes-provider
            forProvider:
              manifest:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: {{ .observed.composite.resource.spec.parameters.appName }}-config
                  namespace: {{ .observed.composite.resource.spec.parameters.namespace }}
                  labels:
                    app: {{ .observed.composite.resource.spec.parameters.appName }}
                    crossplane.io/managed-by: {{ .observed.composite.resource.metadata.name }}
                data:
                  index.html: |
                    <html>
                    <body>
                      <h1>Hello from Crossplane v2.0!</h1>
                      <p>Application: {{ .observed.composite.resource.spec.parameters.appName }}</p>
                      <p>Managed by Crossplane v2 GitOps Demo</p>
                      <p>Namespaced Resources FTW!</p>
                      <p>XR Name: {{ .observed.composite.resource.metadata.name }}</p>
                      <p>XR Namespace: {{ .observed.composite.resource.metadata.namespace }}</p>
                    </body>
                    </html>

  - step: create-deployment
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          apiVersion: kubernetes.m.crossplane.io/v1alpha1
          kind: Object
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-deployment
            namespace: {{ .observed.composite.resource.metadata.namespace }}
          spec:
            providerConfigRef:
              name: kubernetes-provider
            forProvider:
              manifest:
                apiVersion: apps/v1
                kind: Deployment
                metadata:
                  name: {{ .observed.composite.resource.spec.parameters.appName }}
                  namespace: {{ .observed.composite.resource.spec.parameters.namespace }}
                  labels:
                    app: {{ .observed.composite.resource.spec.parameters.appName }}
                    crossplane.io/managed-by: {{ .observed.composite.resource.metadata.name }}
                spec:
                  replicas: {{ .observed.composite.resource.spec.parameters.replicas }}
                  selector:
                    matchLabels:
                      app: {{ .observed.composite.resource.spec.parameters.appName }}
                  template:
                    metadata:
                      labels:
                        app: {{ .observed.composite.resource.spec.parameters.appName }}
                        crossplane.io/managed-by: {{ .observed.composite.resource.metadata.name }}
                    spec:
                      containers:
                      - name: web
                        image: {{ .observed.composite.resource.spec.parameters.image }}
                        ports:
                        - containerPort: 80
                        volumeMounts:
                        - name: html
                          mountPath: /usr/share/nginx/html
                        env:
                        - name: CROSSPLANE_VERSION
                          value: "v2.0"
                        - name: XR_NAME
                          value: {{ .observed.composite.resource.metadata.name }}
                        - name: XR_NAMESPACE
                          value: {{ .observed.composite.resource.metadata.namespace }}
                      volumes:
                      - name: html
                        configMap:
                          name: {{ .observed.composite.resource.spec.parameters.appName }}-config

  - step: create-service
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          apiVersion: kubernetes.m.crossplane.io/v1alpha1
          kind: Object
          metadata:
            name: {{ .observed.composite.resource.metadata.name }}-service
            namespace: {{ .observed.composite.resource.metadata.namespace }}
          spec:
            providerConfigRef:
              name: kubernetes-provider
            forProvider:
              manifest:
                apiVersion: v1
                kind: Service
                metadata:
                  name: {{ .observed.composite.resource.spec.parameters.appName }}
                  namespace: {{ .observed.composite.resource.spec.parameters.namespace }}
                  labels:
                    app: {{ .observed.composite.resource.spec.parameters.appName }}
                    crossplane.io/managed-by: {{ .observed.composite.resource.metadata.name }}
                spec:
                  selector:
                    app: {{ .observed.composite.resource.spec.parameters.appName }}
                  ports:
                  - port: 80
                    targetPort: 80
                    name: http
                  type: ClusterIP
