apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: webapp-composition
  labels:
    crossplane.io/xrd: xwebapps.platform.example.com
spec:
  compositeTypeRef:
    apiVersion: platform.example.com/v1alpha1
    kind: XWebApp
  
  mode: Pipeline
  
  pipeline:
  - step: resources
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          {{ range .observed.composite.resource.spec.parameters }}
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: {{ .name }}-namespace
            annotations:
              crossplane.io/external-name: {{ .namespace }}
          spec:
            providerConfigRef:
              name: kubernetes-provider
            forProvider:
              manifest:
                apiVersion: v1
                kind: Namespace
                metadata:
                  name: {{ .namespace }}
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: {{ .name }}-configmap
          spec:
            providerConfigRef:
              name: kubernetes-provider
            forProvider:
              manifest:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: {{ .name }}-config
                  namespace: {{ .namespace }}
                data:
                  index.html: |
                    <html>
                    <body>
                      <h1>Hello from Crossplane!</h1>
                      <p>Application: {{ .name }}</p>
                      <p>Managed by Crossplane GitOps Demo</p>
                    </body>
                    </html>
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: {{ .name }}-deployment
          spec:
            providerConfigRef:
              name: kubernetes-provider
            forProvider:
              manifest:
                apiVersion: apps/v1
                kind: Deployment
                metadata:
                  name: {{ .name }}
                  namespace: {{ .namespace }}
                spec:
                  replicas: {{ .replicas | default 2 }}
                  selector:
                    matchLabels:
                      app: {{ .name }}
                  template:
                    metadata:
                      labels:
                        app: {{ .name }}
                    spec:
                      containers:
                      - name: web
                        image: {{ .image | default "nginx:1.21" }}
                        ports:
                        - containerPort: 80
                        volumeMounts:
                        - name: html
                          mountPath: /usr/share/nginx/html
                      volumes:
                      - name: html
                        configMap:
                          name: {{ .name }}-config
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: {{ .name }}-service
          spec:
            providerConfigRef:
              name: kubernetes-provider
            forProvider:
              manifest:
                apiVersion: v1
                kind: Service
                metadata:
                  name: {{ .name }}
                  namespace: {{ .namespace }}
                spec:
                  selector:
                    app: {{ .name }}
                  ports:
                  - port: 80
                    targetPort: 80
                  type: ClusterIP
          {{ end }}