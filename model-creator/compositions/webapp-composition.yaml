apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: webapp-composition
  labels:
    crossplane.io/xrd: xwebapps.platform.example.com
spec:
  compositeTypeRef:
    apiVersion: platform.example.com/v1alpha1
    kind: XWebApp
  resources:
  - name: namespace
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        providerConfigRef:
          name: kubernetes-provider
        forProvider:
          manifest:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: default
    patches:
    - fromFieldPath: spec.parameters.namespace
      toFieldPath: spec.forProvider.manifest.metadata.name
      
  - name: configmap
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        providerConfigRef:
          name: kubernetes-provider
        forProvider:
          manifest:
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: app-config
              namespace: default
            data:
              index.html: |
                <html>
                <body>
                  <h1>Hello from Crossplane v1.20.1!</h1>
                  <p>Application: demo-app</p>
                  <p>Managed by Crossplane GitOps Demo</p>
                </body>
                </html>
    patches:
    - fromFieldPath: spec.parameters.appName
      toFieldPath: spec.forProvider.manifest.metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-config"
    - fromFieldPath: spec.parameters.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace
    - fromFieldPath: spec.parameters.appName
      toFieldPath: spec.forProvider.manifest.data["index.html"]
      transforms:
      - type: string
        string:
          fmt: |
            <html>
            <body>
              <h1>Hello from Crossplane v1.20.1!</h1>
              <p>Application: %s</p>
              <p>Managed by Crossplane GitOps Demo</p>
            </body>
            </html>
            
  - name: deployment
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        providerConfigRef:
          name: kubernetes-provider
        forProvider:
          manifest:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: demo-app
              namespace: default
            spec:
              replicas: 2
              selector:
                matchLabels:
                  app: demo-app
              template:
                metadata:
                  labels:
                    app: demo-app
                spec:
                  containers:
                  - name: web
                    image: nginx:1.21
                    ports:
                    - containerPort: 80
                    volumeMounts:
                    - name: html
                      mountPath: /usr/share/nginx/html
                  volumes:
                  - name: html
                    configMap:
                      name: demo-app-config
    patches:
    - fromFieldPath: spec.parameters.appName
      toFieldPath: spec.forProvider.manifest.metadata.name
    - fromFieldPath: spec.parameters.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace
    - fromFieldPath: spec.parameters.replicas
      toFieldPath: spec.forProvider.manifest.spec.replicas
    - fromFieldPath: spec.parameters.image
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].image
    - fromFieldPath: spec.parameters.appName
      toFieldPath: spec.forProvider.manifest.spec.selector.matchLabels.app
    - fromFieldPath: spec.parameters.appName
      toFieldPath: spec.forProvider.manifest.spec.template.metadata.labels.app
    - fromFieldPath: spec.parameters.appName
      toFieldPath: spec.forProvider.manifest.spec.template.spec.volumes[0].configMap.name
      transforms:
      - type: string
        string:
          fmt: "%s-config"
          
  - name: service
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        providerConfigRef:
          name: kubernetes-provider
        forProvider:
          manifest:
            apiVersion: v1
            kind: Service
            metadata:
              name: demo-app
              namespace: default
            spec:
              selector:
                app: demo-app
              ports:
              - port: 80
                targetPort: 80
              type: ClusterIP
    patches:
    - fromFieldPath: spec.parameters.appName
      toFieldPath: spec.forProvider.manifest.metadata.name
    - fromFieldPath: spec.parameters.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace
    - fromFieldPath: spec.parameters.appName
      toFieldPath: spec.forProvider.manifest.spec.selector.app